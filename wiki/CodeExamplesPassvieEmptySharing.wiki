#Code Example - Empty sharing in passive mode

= Description =

_[CodeExamplesConnectToHub To learn on how to connect to hub click here.]_

First of all we need to create a Share.
Yes, this needs to be done even if we are not sharing anything.
Secondly we need to add filelist(s) to share.
If we are not doing this everyone will get a message saying that our filelist is not there.
Thirdly we need to add this newly created share to our hub.
Last thing that needs to be done is letting us know when a transfer is beeing created so we can start it and store it somewhere.
We are doing this by listening to the update event in hub.

= Code =
{{{
using FlowLib.Connections;
using FlowLib.Containers;
using FlowLib.Protocols;
using FlowLib.Events;
using FlowLib.Interfaces;
using FlowLib.Managers;
using FlowLib.Utils.FileLists;

namespace ConsoleDemo.Examples
{
    public class PassiveEmptySharing
    {
        TransferManager transferManager = new TransferManager();
        DownloadManager downloadManager = new DownloadManager();

        public PassiveEmptySharing()
        {
            // Creates a empty share
            Share share = new Share("Testing");
            // Adds common filelist to share
            AddFilelistsToShare(share);

            HubSetting setting = new HubSetting();
            setting.Address = "127.0.0.1";
            setting.Port = 411;
            setting.DisplayName = "FlowLib";

            Hub hubConnection = new Hub(setting);
            // Adds share to hub
            hubConnection.Share = share;
            hubConnection.Protocol = new HubNmdcProtocol(hubConnection);
            hubConnection.Update += new FmdcEventHandler(hubConnection_Update);
            hubConnection.Connect();
        }

        void AddFilelistsToShare(Share s)
        {
            // This will add common filelists to share and save them in directory specified.
            General.AddCommonFilelistsToShare(s, "C:\\Private\\FMDC\\PiP\\FlowLibDemo\\ConsoleDemo\\bin\\Debug\\MyFileLists\\");
        }

        void hubConnection_Update(object sender, FmdcEventArgs e)
        {
            Hub hub = (Hub)sender;
            switch (e.Action)
            {
                case Actions.TransferStarted:
                    Transfer trans = e.Data as Transfer;
                    if (trans != null)
                    {
                        transferManager.StartTransfer(trans);
                    }
                    break;
            }
        }
    }
}
}}}