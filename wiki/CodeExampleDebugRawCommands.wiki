#summary Code Example - Show what raw commands beeing sent and received

= Description =

_[CodeExamplesConnectToHub To learn on how to connect to hub click here.]_

  # Start listening on MessageReceived and MessageToSend event.
  # e.Data will contain a inherit class of HubMessage.

= Note =

  # This is before protocol handling (*NO* action has been triggered)
  # This is before message has actualy been sent. (If connection is not alive, message will not be sent)
  # You can tell protocol that you want to handle this message yourself by setting e.Handled = true. (Protocol will now ignore sending/receiving of this command)


= Code =

{{{
using FlowLib.Connections;
using FlowLib.Containers;
using FlowLib.Interfaces;

namespace ConsoleDemo.Examples
{
    public class DisplayRawMessages
    {
        public DisplayRawMessages()
        {
            HubSetting settings = new HubSetting();
            settings.Address = "127.0.0.1";
            settings.Port = 411;
            settings.DisplayName = "FlowLibNick";

            Hub hubConnection = new Hub(settings);
            hubConnection.Protocol = new FlowLib.Protocols.HubNmdcProtocol(hubConnection);
            hubConnection.Protocol.MessageReceived += new FlowLib.Events.FmdcEventHandler(Protocol_MessageReceived);
            hubConnection.Protocol.MessageToSend += new FlowLib.Events.FmdcEventHandler(Protocol_MessageToSend);

            hubConnection.Connect();
        }

        void Protocol_MessageToSend(object sender, FlowLib.Events.FmdcEventArgs e)
        {
            HubMessage msg = e.Data as HubMessage;
            if (msg != null)
                System.Console.WriteLine(string.Format("OUT: {0}", msg.Raw));
        }

        void Protocol_MessageReceived(object sender, FlowLib.Events.FmdcEventArgs e)
        {
            HubMessage msg = e.Data as HubMessage;
            if (msg != null)
               System.Console.WriteLine(string.Format("IN: {0}", msg.Raw));
        }
    }
}
}}}